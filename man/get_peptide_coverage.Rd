% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_peptide_coverage.R
\name{get_peptide_coverage}
\alias{get_peptide_coverage}
\title{Creates the "Peptide Coverage" Object}
\usage{
get_peptide_coverage(ScanMetadata, ProteinTable, ProteinID)
}
\arguments{
\item{ScanMetadata}{Object of the scan_metadata class from get_scan_metadata. Required.}

\item{ProteinTable}{A "protein_table" object generated by get_protein_table. Required.}

\item{ProteinID}{The ID of the protein to pull protein coverage information from. Required.}
}
\description{
Returns an object with two data tables used to visualize where
   identified peptides map to a specific literature sequence. These data tables
   include one that contains sequences with start and stop positions, and the
   other contains counts of identified residues.
}
\details{
The two outputted data tables are used by the three coverage plots.

The first is called "PeptidesByPosition" and is used by Coverage Plot and Coverage Lit Seq Plot.
\tabular{ll}{
Scan Number \tab MS Scan Number from ScanMetadata \cr
\tab \cr
Sequence \tab Peptide or protein sequence of the fragment or literature sequence. \cr
\tab \cr
Peptide Start Position \tab A single number to indicate where the fragment begins on the literature sequence (from N to C) \cr
\tab \cr
Q Value \tab The Q value (adjusted P value) of the peptide-spectral match provided by a database search tool. \cr
\tab \cr
Score \tab The score of the peptide-spectral match (typically a small value where smaller = better match) \cr
\tab \cr
}

The second is called "ResidueCount" and is used by coverage bar plot.
\tabular{ll}{
Residue \tab The residue from the literature sequence written in letter annotation and position format. i.e. "M1" is the first methionine. \cr
\tab \cr
Count \tab The number of times that residue was identified across all fragments. \cr
\tab \cr
Position \tab The residue's position on the literature sequence \cr
\tab \cr
}
}
\examples{
\dontrun{

# Make Peptide Coverage Object
PeptideCoverage <- get_peptide_coverage(ScanMetadata = BU_ScanMetadata, ProteinTable = ProteinTable1, ProteinID = "SO_0225")

}
}
